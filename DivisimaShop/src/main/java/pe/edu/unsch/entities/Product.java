package pe.edu.unsch.entities;
// Generated 16/07/2019 01:54:40 PM by Hibernate Tools 5.1.10.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "divisimabd")
public class Product implements java.io.Serializable {

	private int idproduct;
	private Brand brand;
	private Category category;
	private Colour colour;
	private Partner partner;
	private String name;
	private BigDecimal price;
	private int quantity;
	private String description;
	private String urlimage;
	private byte feature;
	private Set<Ordersdetail> ordersdetails = new HashSet<Ordersdetail>(0);

	public Product() {
	}

	public Product(int idproduct, Brand brand, Category category, Colour colour, Partner partner, String name,
			BigDecimal price, int quantity, byte feature) {
		this.idproduct = idproduct;
		this.brand = brand;
		this.category = category;
		this.colour = colour;
		this.partner = partner;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.feature = feature;
	}

	public Product(int idproduct, Brand brand, Category category, Colour colour, Partner partner, String name,
			BigDecimal price, int quantity, String description, String urlimage, byte feature,
			Set<Ordersdetail> ordersdetails) {
		this.idproduct = idproduct;
		this.brand = brand;
		this.category = category;
		this.colour = colour;
		this.partner = partner;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.description = description;
		this.urlimage = urlimage;
		this.feature = feature;
		this.ordersdetails = ordersdetails;
	}

	@Id

	@Column(name = "idproduct", unique = true, nullable = false)
	public int getIdproduct() {
		return this.idproduct;
	}

	public void setIdproduct(int idproduct) {
		this.idproduct = idproduct;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idbrand", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcategory", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcolour", nullable = false)
	public Colour getColour() {
		return this.colour;
	}

	public void setColour(Colour colour) {
		this.colour = colour;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpartner", nullable = false)
	public Partner getPartner() {
		return this.partner;
	}

	public void setPartner(Partner partner) {
		this.partner = partner;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "price", nullable = false, precision = 18)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "urlimage", length = 100)
	public String getUrlimage() {
		return this.urlimage;
	}

	public void setUrlimage(String urlimage) {
		this.urlimage = urlimage;
	}

	@Column(name = "feature", nullable = false)
	public byte getFeature() {
		return this.feature;
	}

	public void setFeature(byte feature) {
		this.feature = feature;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Ordersdetail> getOrdersdetails() {
		return this.ordersdetails;
	}

	public void setOrdersdetails(Set<Ordersdetail> ordersdetails) {
		this.ordersdetails = ordersdetails;
	}

}
